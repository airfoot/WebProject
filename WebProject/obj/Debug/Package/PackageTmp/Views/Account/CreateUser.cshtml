@using WebProject.Models
@model UserViewModel

    <style>
        .kv-avatar .krajee-default.file-preview-frame, .kv-avatar .krajee-default.file-preview-frame:hover {
            margin: 0;
            padding: 0;
            border: none;
            box-shadow: none;
            text-align: center;
        }

        .kv-avatar {
            display: inline-block;
            height: 220px;
            width: 210px;
        }

            .kv-avatar .file-input {
                display: table-cell;
                width: 210px;
                height: 220px;
            }

        .kv-reqd {
            color: red;
            font-family: monospace;
            font-weight: normal;
        }

        .row {
            margin-top: 25px;
        }
    </style>


    <div>

        <div class="page-header">
            <h2>新建用户</h2>
        </div>
 
        @using (Html.BeginForm("CreateUser", "Account", FormMethod.Post, new { @class = "form-horizontal", enctype = "multipart/form-data",id="CreateUserForm" }))
        {


            <div class="row">
                <div class="col-sm-4 text-center">
                    <div class="kv-avatar">
                        <div class="file-loading">
                            <input id="userPicture" name="userPicture"  data-min-file-count="0" type="file">
                        </div>
                    </div>
                    <div class="kv-avatar-hint" style="margin-top:100px"><span>用户照片</span></div>
                </div>
                <div class="col-sm-8">
                    <div class="text-danger">
                        @Html.ValidationSummary(true)
                    </div>
                    <div class="form-group row">

                        @Html.LabelFor(m => m.FullName, new { @class = "col-sm-1 control-label" })
                        <div class="col-sm-6">
                            @Html.TextBoxFor(m => m.FullName, new { @class = "form-control" })                  
                            @Html.ValidationMessageFor(m => m.FullName,"" , new { @class = "text-danger" })
                        </div>

                    </div>

                    <div class="form-group row">

                        @Html.LabelFor(m => m.UserName, new { @class = "col-sm-1 control-label" })
                        <div class="col-sm-6">
                            @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m=>m.UserName,"", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(m => m.Password, new { @class = "col-sm-1 control-label" })
                        <div class="col-sm-6">
                            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m=>m.Password,"", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(m => m.Email, new { @class = "col-sm-1 control-label" })
                        <div class="col-sm-6">
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control",id="UserEmail" })
                            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                            
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(m => m.Title, new { @class = "col-sm-1 control-label" })
                        <div class="col-sm-6">
                            @Html.TextBoxFor(m => m.Title, new { @class = "form-control" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(m => m.Department, new { @class = "col-sm-1 control-label" })
                        <div class="col-sm-6">
                            @Html.TextBoxFor(m => m.Department, new { @class = "form-control" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(m => m.DirectManagerEmail, new { @class = "col-sm-1 control-label" })
                        <div class="col-sm-6">
                            @Html.TextBoxFor(m => m.DirectManagerEmail, new { @class = "form-control",placeholder="请填写正确的邮箱地址",id="DirectManagerEmail" })
                            @Html.ValidationMessageFor(m=>m.DirectManagerEmail,"", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(m => m.HireDate, new { @class = "col-sm-1 control-label" })
                        <div class="col-sm-6">
                          

                            <div class="input-group date" id="HireDate" data-date-format="MM/DD/YYYY/">
                                @Html.TextBoxFor(m => m.HireDate, new { @class = "form-control", id="HireDate" })
                                <span class="input-group-addon">
                                    <span class="glyphicon glyphicon-calendar"></span>
                                </span>
                            </div>
                            @Html.ValidationMessageFor(m=>m.HireDate,"",new { @class="text-danger"})
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(m => m.IdentityNumber, new { @class = "col-sm-1 control-label" })
                        <div class="col-sm-6">
                            @Html.TextBoxFor(m => m.IdentityNumber, new { @class = "form-control" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(m => m.ContactAddress, new { @class = "col-sm-1 control-label" })
                        <div class="col-sm-6">
                            @Html.TextBoxFor(m => m.ContactAddress, new { @class = "form-control" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(m => m.ContactPhone, new { @class = "col-sm-1 control-label" })
                        <div class="col-sm-6">
                            @Html.TextBoxFor(m => m.ContactPhone, new { @class = "form-control" })
                        </div>
                    </div>




                    <div class="form-group">
                        <hr>

                        <div class="text-left col-sm-offset-1">
                            <button type="submit" id="CreateUserFormSubmit" class="btn btn-primary" style="width:80px;margin-left:20px">保存</button>
                        </div>
                    </div>
                </div>
            </div>
        }
        

        <!-- the fileinput plugin initialization -->
        <script>

            $("#userPicture").fileinput({
               

                required: false,
                validateInitialCount: false,
                overwriteInitial: true,

               
                maxFileSize: 11500,
                maxFileCount: 1,
                minFileCount: 0,
                showClose: false,
                showCaption: false,
                browseLabel: '',
                removeLabel: '',
                browseIcon: '<i class="glyphicon glyphicon-folder-open"></i>',
                removeIcon: '<i class="glyphicon glyphicon-remove"></i>',
                removeTitle: 'Cancel or reset changes',
                elErrorContainer: '#kv-avatar-hint',
                msgErrorClass: 'alert alert-block alert-danger',
                defaultPreviewContent: '<img style="width:210px;height:220px" src="/images/defaultUser.jpg" alt="Your Avatar">',
                layoutTemplates: { main2: '{preview} ' + ' {remove} {browse}' },
                allowedFileExtensions: ["jpg", "png", "gif", "jpeg"],
                previewSettings: { image: { width: "210px", height: "220px", 'max-width': "210px", 'max-height': "220px" } },

            });
        </script>


<script type="text/javascript">

            $("#HireDate").datetimepicker({
                format: "MM/DD/YYYY",
                defaultDate: moment(),
                showClose: true,
                showTodayButton: true

            });

  //          $('#CreateUserFormSubmit').click(function () {
  //              var isEmail = $('#UserEmail').val();
  //              if ($.trim(isEmail).length == 0) {
  //                  alert('Please enter valid email address');
  //                //  e.preventDefault();
  //              }
  //              if (validateEmail(isEmail)) {
  //                  ;
  //              }
  //              else {
  //                 alert('Invalid Email Address');
  //                 // e.preventDefault();
  //              }
  //              var managerEmail = $('#DirectManagerEmail').val();
  //              if ($.trim(managerEmail).length == 0) {
  //                  alert('Please enter valid email address');
  //                //  e.preventDefault();
  //              }
  //              if (validateEmail(managerEmail)) {
  //                  ;
  //              }
  //              else {
  //                  alert('Invalid Email Address');
  //                //  e.preventDefault();
  //              }
  //          });

  //function validateEmail(isEmail) {
  //  var filter = "/[A-Z0-9._-]+@@[A-Z0-9.]+.[A-Z]/ig";
  //   if (filter.test(isEmail)) {
  //      return true;
  //   }
  //   else {
  //      return false;
  //   }
  // }​
</script>



    </div>